{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DaleCrowder/photo-notes/app/api/submissions/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { cookies } from 'next/headers'\r\nimport { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs'\r\n\r\nexport async function POST(req: Request) {\r\n  console.log('[POST /api/submissions] hit')\r\n  try {\r\n    const supabase = createRouteHandlerClient({ cookies })\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    console.log('  user in route:', user?.id ?? 'NONE')\r\n\r\n    if (!user) {\r\n      return NextResponse.json({ error: 'Not authenticated' }, { status: 401 })\r\n    }\r\n\r\n    const body = await req.json().catch(() => null)\r\n    console.log('  body:', body)\r\n    if (!body?.image_path || !body?.description) {\r\n      return NextResponse.json({ error: 'Missing image_path/description' }, { status: 400 })\r\n    }\r\n\r\n    const { error } = await supabase\r\n      .from('submissions')\r\n      .insert({ user_id: user.id, image_path: body.image_path, description: body.description })\r\n\r\n    if (error) {\r\n      console.error('  insert error:', error.message)\r\n      return NextResponse.json({ error: error.message }, { status: 400 })\r\n    }\r\n\r\n    console.log('  insert ok')\r\n    return NextResponse.json({ ok: true })\r\n  } catch (e: any) {\r\n    console.error('  route crash:', e?.message || e)\r\n    return NextResponse.json({ error: e?.message || 'Unhandled error' }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,WAAW,IAAA,sMAAwB,EAAC;YAAE,SAAA,4IAAO;QAAC;QACpD,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QACtD,QAAQ,GAAG,CAAC,oBAAoB,MAAM,MAAM;QAE5C,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,IAAM;QAC1C,QAAQ,GAAG,CAAC,WAAW;QACvB,IAAI,CAAC,MAAM,cAAc,CAAC,MAAM,aAAa;YAC3C,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,eACL,MAAM,CAAC;YAAE,SAAS,KAAK,EAAE;YAAE,YAAY,KAAK,UAAU;YAAE,aAAa,KAAK,WAAW;QAAC;QAEzF,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,mBAAmB,MAAM,OAAO;YAC9C,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK;IACtC,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,kBAAkB,GAAG,WAAW;QAC9C,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO,GAAG,WAAW;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACrF;AACF","debugId":null}}]
}