{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DaleCrowder/photo-notes/components/SubmissionCard.tsx"],"sourcesContent":["// components/SubmissionCard.tsx\r\n'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\n\r\ntype Props = {\r\n  id: string\r\n  imageUrl?: string\r\n  description: string\r\n  createdAt: string\r\n  reverse?: boolean\r\n}\r\n\r\nexport default function SubmissionCard({\r\n  id,\r\n  imageUrl,\r\n  description,\r\n  createdAt,\r\n  reverse = false,\r\n}: Props) {\r\n  const router = useRouter()\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [text, setText] = useState(description)\r\n  const [saving, setSaving] = useState(false)\r\n  const [deleting, setDeleting] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const onSave = async () => {\r\n    setError(null)\r\n    const trimmed = text.trim()\r\n    if (!trimmed) {\r\n      setError('Description cannot be empty.')\r\n      return\r\n    }\r\n    if (trimmed.length > 2000) {\r\n      setError('Max 2000 characters.')\r\n      return\r\n    }\r\n\r\n    setSaving(true)\r\n    try {\r\n      const res = await fetch(`/api/submissions/${id}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ description: trimmed }),\r\n      })\r\n      const bodyText = await res.text()\r\n      if (!res.ok) {\r\n        let msg = 'Update failed'\r\n        try { msg = JSON.parse(bodyText).error || msg } catch {}\r\n        throw new Error(msg)\r\n      }\r\n      setIsEditing(false)\r\n      router.refresh()\r\n    } catch (e: any) {\r\n      setError(e?.message || 'Update failed')\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  const onDelete = async () => {\r\n    const ok = confirm('Delete this submission? This cannot be undone.')\r\n    if (!ok) return\r\n\r\n    setError(null)\r\n    setDeleting(true)\r\n    try {\r\n      const res = await fetch(`/api/submissions/${id}`, { method: 'DELETE' })\r\n      const bodyText = await res.text()\r\n      if (!res.ok) {\r\n        let msg = 'Delete failed'\r\n        try { msg = JSON.parse(bodyText).error || msg } catch {}\r\n        throw new Error(msg)\r\n      }\r\n      router.refresh()\r\n    } catch (e: any) {\r\n      setError(e?.message || 'Delete failed')\r\n    } finally {\r\n      setDeleting(false)\r\n    }\r\n  }\r\n\r\n  const imageColOrder = reverse ? 'md:order-2' : 'md:order-1'\r\n  const textColOrder  = reverse ? 'md:order-1' : 'md:order-2'\r\n\r\n  return (\r\n    <article className=\"border rounded-xl p-4 grid gap-4 md:grid-cols-[260px_1fr] items-start\">\r\n      {/* Left/Right: Image (ordered via md:order-*) */}\r\n      <div className={imageColOrder}>\r\n        {imageUrl ? (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"submission\"\r\n            className=\"w-full h-auto rounded-lg object-cover max-h-[420px]\"\r\n          />\r\n        ) : (\r\n          <div className=\"w-full aspect-video rounded-lg border grid place-items-center text-sm text-gray-500\">\r\n            No image\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Opposite side: Text / Meta / Actions */}\r\n      <div className={`grid gap-3 ${textColOrder}`}>\r\n        {isEditing ? (\r\n          <div className=\"grid gap-2\">\r\n            <textarea\r\n              className=\"border rounded-xl p-3 min-h-28\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              maxLength={2000}\r\n            />\r\n            <div className=\"text-sm opacity-70\">{text.length}/2000</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={onSave}\r\n                disabled={saving}\r\n                className=\"border rounded-xl px-3 py-1\"\r\n              >\r\n                {saving ? 'Saving…' : 'Save'}\r\n              </button>\r\n              <button\r\n                onClick={() => { setIsEditing(false); setText(description) }}\r\n                disabled={saving}\r\n                className=\"border rounded-xl px-3 py-1\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p className=\"whitespace-pre-wrap\">{description}</p>\r\n        )}\r\n\r\n        <time className=\"text-sm opacity-70\">\r\n          {new Date(createdAt).toLocaleString()}\r\n        </time>\r\n\r\n        {error ? <p className=\"text-red-600 text-sm\">{error}</p> : null}\r\n\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => setIsEditing(true)}\r\n            disabled={deleting || saving}\r\n            className=\"border rounded-xl px-3 py-1\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={onDelete}\r\n            disabled={deleting || saving}\r\n            className=\"border rounded-xl px-3 py-1\"\r\n          >\r\n            {deleting ? 'Deleting…' : 'Delete'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DaleCrowder/photo-notes/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}